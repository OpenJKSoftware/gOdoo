# --------------------------------
# Project Metadata
# --------------------------------
[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "gOdoo-cli"
dynamic = ["version"]
description = "Wrapper around Odoo-Bin with some convinience RPC functions."
authors = [{name="Joshua Kreuder", email="Joshua_Kreuder@outlook.com"}]
license = {text = "LGPL-3.0-only"}
readme = "README.md"
keywords = ["odoo", "godoo", "devcontainer"]
requires-python = ">=3.9"
urls = {repository = "https://github.com/OpenJKSoftware/gOdoo"}
scripts = {godoo = "godoo_cli:launch_cli"}
dependencies = [
    "python-dotenv>=0.20.0",
    "ruamel-yaml>=0.17.21",
    "gitpython>=3.1.27",
    "godoo-rpc>=0.1.4",
    "openupgradelib>=3.3.4",
    "psycopg2-binary>=2.9.10",
    "passlib>=1.7.3",
    "typer-common-functions>=0.1.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    # Development Tools
    "ipdb>=0.13.9",
    "debugpy>=1.6.0",
    "watchdog>=2.1.7",
    "rope>=0.23.0",
    "py-spy>=0.3.11",
    "inotify>=0.2.10",
    "pydevd-odoo>=1.2.1",
    "pre-commit>=4.0.0",
    # Testing
    "pytest>=7.2.1",
    "pytest-cov>=4.0.0",
    "mock>=4.0.3",
    # Linting
    "pylint-odoo>=8.0.16",
    "flake8>=5.0.4",
    "flake8-pyproject>=1.2.3",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.3.12",
    "flake8-comprehensions>=3.14.0",
    "black>=22.10.0",
    "isort>=5.10.1",
]

# --------------------------------
# Build & Version Management
# --------------------------------
[tool.hatch]
version.path = "src/godoo_cli/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/godoo_cli"]

# --------------------------------
# Development Environments
# --------------------------------
[tool.hatch.envs.dev]
features = ["dev"]

[tool.hatch.envs.dev.scripts]
# Formatting commands
format = [
  "black src",
  "isort src",
]

# Linting commands
lint = [
  "black --check src",
  "isort --check src",
  "flake8 src",
  "pylint src",
]

# Testing commands
test = "pytest"

# CI commands
ci = [
  "lint",
  "pytest --verbose --exitfirst --failed-first --junitxml=junit/pytest-results.xml --cov=src --cov-report=xml"
]

# --------------------------------
# Tool Configurations
# --------------------------------
[tool.flake8]
max-line-length = 120
extend-ignore = [
    "E203",  # Conflicts with black
    "E266",  # Too many leading '#' for block comment
    "E501",  # Line too long (handled by black)
    "W503",  # Line break before binary operator (conflicts with black)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    ".venv",
    "venv",
]
max-complexity = 10
per-file-ignores = [
    "__init__.py:F401,F403",  # Ignore unused and * imports in __init__.py files
    "tests/*:S101,D100,D101,D102,D103,D104,D105,D107",  # Ignore assert usage and docstrings in tests
    "test_*.py:S101,D100,D101,D102,D103,D104,D105,D107",  # Same for test files in any directory
    "*_test.py:S101,D100,D101,D102,D103,D104,D105,D107",  # Same for test files in any directory
]
count = true
statistics = true
docstring-convention = "google"
max-doc-length = 120

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
known_odoo = "odoo"
known_odoo_addons = "odoo.addons"
sections = "FUTURE,STDLIB,THIRDPARTY,ODOO,ODOO_ADDONS,FIRSTPARTY,LOCALFOLDER"

[tool.pylint.master]
load-plugins = "pylint_odoo,pylint.extensions.no_self_use"
ignore = ["CVS", ".git", ".hg", ".tox", ".eggs", "*.egg", "build", "dist"]
persistent = true
jobs = 0

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "fp", "id", "db", "fn"]
no-docstring-rgx = "^_|^test_"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.odoolint]
manifest-required-authors = "Joshua Kreuder"
manifest-required-keys = "license"
valid-odoo-versions = "16.0"

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "all",
    "missing-docstring",
    "unused-argument",
    "broad-except",
    "invalid-name",  # Handled by flake8
    "line-too-long",  # Handled by black/flake8
    "too-many-lines",  # Handled by flake8
    "wrong-import-order",  # Handled by isort
]
enable = [
    "eval-used",
    "license-allowed",
    "manifest-required-author",
    "manifest-required-key",
    "sql-injection",
    "translation-required",
    "anomalous-backslash-in-string",
    "dangerous-default-value",
    "duplicate-key",
    "missing-final-newline",
    "missing-return",
    "syntax-error",
    "undefined-variable",
]

[tool.pylint.similarities]
min-similarity-lines = 8
ignore-comments = true
ignore-docstrings = true
ignore-imports = true

[tool.pylint.design]
max-args = 8
max-attributes = 10
min-public-methods = 0
max-public-methods = 20

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests", "src"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--no-cov-on-fail",
    "--verbose"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
