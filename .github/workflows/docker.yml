name: Quality

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}"
  POSTGRES_DB: postgres
  POSTGRES_USER: odoo_user
  POSTGRES_PASSWORD: odoo
  TEST_TARGET:
    "${{ github.event_name == 'pull_request' && 'changes:${{ github.event.pull_request.base.ref }}' || 'all' }}"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-testing

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          cache-from: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          push: true
          build-args: |
            SOURCE_CLONE_ARCHIVE=true
          target: test
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test:
    name: Run Test Image
    runs-on: ubuntu-latest
    container: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-testing"
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout PR Target branch
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Checkout repository Branch
        uses: actions/checkout@v3

      - name: run Tests
        run: |
          echo "Testing with Target $TEST_TARGET"
          godoo --verbose test "$TEST_TARGET"
