name: Test Build Push

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, ready_for_review, auto_merge_enabled]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}"

jobs:
  QualitChecks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Install dependencies
        run: hatch env create

      - name: Run Pylint & Flake8
        run: hatch run lint:ci

      - name: Run Tests with Coverage
        run: hatch run test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  build-and-push-image:
    runs-on: ubuntu-latest
    name: Build image and push if on master
    needs: QualitChecks
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image if on master
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "./docker/Dockerfile"
          platforms: "linux/amd64"
          cache-from: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          push: ${{ github.ref == 'refs/heads/master' && 'true' ||  'false'  }}
          build-args: |
            SOURCE_CLONE_ARCHIVE=True
          target: prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
