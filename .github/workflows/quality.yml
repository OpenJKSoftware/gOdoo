name: Quality

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  QualitChecks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: poetry
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry Package
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install
      - name: Check poetry.lock
        run: poetry lock --check
      - name: mypy
        run: poetry run mypy src --junit-xml=junit/mypy-${{ matrix.python-version }}.xml
      - name: Pylint
        run: poetry run pylint --version && poetry run pylint src addons
      - name: Flake8
        run: poetry run flake8 --format junit-xml src addons > junit/flake8-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: Lint-results-${{ matrix.python-version }}
          path: junit/*.xml
        if: ${{ always() }} # Also run when steps before failed
